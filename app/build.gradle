apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'realm-android'
apply from: "${project.rootDir}/QA/quality.gradle"
android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    applicationId "moe.notify.animenotifier"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 1
    versionName "1.0"
    //if you want your test to be found using JUnit4
    testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    android.defaultConfig.vectorDrawables.useSupportLibrary = true
  }
  dexOptions {
    incremental false
  }
  buildTypes {
    debug {
      applicationIdSuffix '.debug'
      versionNameSuffix '-DEBUG'
    }
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  // If you need to add more flavors, consider using flavor dimensions.
  productFlavors {
    mock {
      applicationIdSuffix = ".mock"
    }
    prod {}
  }

  // Remove mockRelease and ProdDebug as it's not needed.
  android.variantFilter { variant ->
    if (variant.buildType.name == 'release' && variant.getFlavors().get(0).name == 'mock') {
      variant.setIgnore(true);
    }
  }

  // Always show the result of every unit test, even if it passes.
  testOptions.unitTests.all {
    testLogging {
      events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
    }
  }
  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
  }
}
kapt {
  generateStubs = true
}
ext {
  supportLibVersion = '25.1.0' // variable that can be referenced to keep support libs consistent
  dbflow_version = "3.1.1"
}
dependencies {
  compile fileTree(include: ['*.jar'], dir: 'libs')
  // general
  compile "com.android.support:appcompat-v7:${supportLibVersion}"
  compile "com.android.support:support-compat:${supportLibVersion}"
  compile "com.android.support:support-core-utils:${supportLibVersion}"
  compile "com.android.support:support-core-ui:${supportLibVersion}"
  compile "com.android.support:support-fragment:${supportLibVersion}"
  kapt 'com.jakewharton:butterknife-compiler:8.4.0'
  compile 'com.jakewharton:butterknife:8.4.0'
  compile 'com.github.bumptech.glide:glide:3.7.0'
  compile 'com.jakewharton.timber:timber:4.4.0'

  // inspection
  debugCompile 'com.facebook.stetho:stetho:1.4.2'
  debugCompile 'com.facebook.stetho:stetho-okhttp3:1.4.2'
  debugCompile 'com.uphyca:stetho_realm:2.0.0'
  debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
  releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'

  // network
  compile 'com.squareup.retrofit2:retrofit:2.1.0'
  compile 'com.squareup.retrofit2:converter-gson:2.1.0'
  compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'

  //materialdesign
  compile "com.android.support:design:${supportLibVersion}"
  compile "com.android.support:palette-v7:${supportLibVersion}"
  compile "com.android.support:recyclerview-v7:${supportLibVersion}"
  compile "com.android.support:preference-v7:${supportLibVersion}"
  compile 'com.android.support.constraint:constraint-layout:1.0.0-beta4'

  // tests
  testCompile 'junit:junit:4.12'
  testCompile "org.mockito:mockito-core:1.10.19"
  testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}
repositories {
  mavenCentral()
}
